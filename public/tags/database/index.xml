<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database on TLDR Dev Notes</title>
    <link>/tags/database/</link>
    <description>Recent content in Database on TLDR Dev Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>TOML &amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Fri, 20 Feb 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Database Foundations</title>
      <link>/databases/database-foundations/</link>
      <pubDate>Fri, 20 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>/databases/database-foundations/</guid>
      <description>Creating Database CREATE DATABASE `shop` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;  You can also use the keyword SCHEMA to create a database.
CREATE SCHEMA `shop`;  Once a database is cerated you can start using it with the following command
USE `shop`;  Get info about the database SHOW ENGINES  The default engine is InnoDB.
Creating Tables CREATE TABLE actors (name VARCHAR(50));  CREATE is the command telling the database what to do.</description>
    </item>
    
    <item>
      <title>Tips for Querying a MySQL Database</title>
      <link>/databases/querying-selecting-showing-data-from-mysql-database-tips/</link>
      <pubDate>Fri, 20 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>/databases/querying-selecting-showing-data-from-mysql-database-tips/</guid>
      <description>Sort result ORDER based on frequency Here is a nifty way of influencing the ORDER of rows returned by a query that helps in displaying a list with frequently accessed items at the top.
An example is a name/address form where the country is a selectable list. If most of your users are from the UK and US you may want to do something like:
SELECT * FROM countries ORDER by iso_code IN (&#39;UK&#39;, &#39;US&#39;) desc  Which returns something like:</description>
    </item>
    
    <item>
      <title>Automated MySQL Backups to Amazon S3 with AutoMySQLBackups</title>
      <link>/databases/automated-mysql-backups-with-automysqlbackups/</link>
      <pubDate>Tue, 19 Aug 2014 12:59:41 +0500</pubDate>
      
      <guid>/databases/automated-mysql-backups-with-automysqlbackups/</guid>
      <description>This how-to will teach you how to take automated backups of all your MySQL databases and send them to Amazon S3.
Access (Logins) required  root login for the server (sudo is required to run automysqlbackup, root is req. to add to root userâ€™s cron)
 admin login for the mysql server (to provide for backup config file)
 IAM access keys to use with s3cmd (to configure s3cmd)</description>
    </item>
    
  </channel>
</rss>