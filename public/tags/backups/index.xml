<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backups on TLDR Dev Notes</title>
    <link>/tags/backups/</link>
    <description>Recent content in Backups on TLDR Dev Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>TOML &amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Fri, 27 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/backups/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tranfer between Debian Apache based setups</title>
      <link>/sysadmin/debian_server_transfer/</link>
      <pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/sysadmin/debian_server_transfer/</guid>
      <description>Transfer server from DigitalOcean to Vultr Transfering between Debian Apache based setups
This is my current setup
 Apache, MySQL, PHP, phpMyAdmin on Ubuntu Domains added via vhost conf files Let&amp;rsquo;s Encrypt SSL certificates   Transfer databases Transfer all vhost.conf files in /var/etc/site_enabled Transfer all sites in /var/www Transfer SSL certs for all domains  Transfer Domain Conf files This involves
 Locating where the conf files are Copying them to new server  The conf files are usually in the /etc/apache2/sites-available folder and symlinked into the /etc/apache2/sites-enabled folder</description>
    </item>
    
    <item>
      <title>Use rsync to mirror websites</title>
      <link>/sysadmin/rsync-mirror-website-server/</link>
      <pubDate>Wed, 06 Sep 2017 09:22:43 +0500</pubDate>
      
      <guid>/sysadmin/rsync-mirror-website-server/</guid>
      <description>tl;dr apt update &amp;amp;&amp;amp; apt install rsync #Access via remote shell: # Pull: rsync [OPTION...] [USER@]HOST:SRC... [DEST] # Push: rsync [OPTION...] SRC... [USER@]HOST:DEST # Pull: sync remote with local rsync -vhaze ssh user@server.example.com:/var/www/ /var/www rsync -vhaze &amp;quot;ssh -p 1234 -i /root/.ssh/id_rsa&amp;quot; root@server.example.com:/var/www/cakebox.me/public_html/ /var/www/cakebox.me/public_html rsync -qaze &amp;quot;ssh -p 1234 -i /root/.ssh/id_rsa&amp;quot; root@server.example.com:/etc/letsencrypt/archive :/etc/letsencrypt/live :/etc/letsencrypt/renewal /etc/letsencrypt/  -v, --verbose increase verbosity -h, --human-readable output numbers in a human-readable format -q, --quiet suppress non-error messages -a, --archive archive mode; equals -rlptgoD (no -H,-A,-X) -z, --compress compress file data during the transfer -e, --rsh=COMMAND specify the remote shell to use   explainshell for the rsync command.</description>
    </item>
    
    <item>
      <title>Automated MySQL Backups to Amazon S3 with AutoMySQLBackups</title>
      <link>/databases/automated-mysql-backups-with-automysqlbackups/</link>
      <pubDate>Tue, 19 Aug 2014 12:59:41 +0500</pubDate>
      
      <guid>/databases/automated-mysql-backups-with-automysqlbackups/</guid>
      <description>This how-to will teach you how to take automated backups of all your MySQL databases and send them to Amazon S3.
Access (Logins) required  root login for the server (sudo is required to run automysqlbackup, root is req. to add to root userâ€™s cron)
 admin login for the mysql server (to provide for backup config file)
 IAM access keys to use with s3cmd (to configure s3cmd)</description>
    </item>
    
    <item>
      <title>fileconveyer</title>
      <link>/misc/fileconveyer/</link>
      <pubDate>Wed, 21 May 2014 00:00:00 +0000</pubDate>
      
      <guid>/misc/fileconveyer/</guid>
      <description>Install FileConveyer: Change to the directory you want to hold the fileconveyor files, then run:
sudo apt install git python-setuptools &amp;amp;&amp;amp; sudo easy_install pip &amp;amp;&amp;amp; sudo pip install -e git+https://github.com/wimleers/fileconveyor@master#egg=fileconveyor  sudo nano src/fileconveyor/fileconveyor/config.xml  &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;config&amp;gt; &amp;lt;!-- Sources --&amp;gt; &amp;lt;sources ignoredDirs=&amp;quot;&amp;quot;&amp;gt; &amp;lt;source name=&amp;quot;test&amp;quot; scanPath=&amp;quot;/var/www/html/test&amp;quot; /&amp;gt; &amp;lt;/sources&amp;gt; &amp;lt;!-- Servers --&amp;gt; &amp;lt;servers&amp;gt; &amp;lt;server name=&amp;quot;Rackspace Cloud Files&amp;quot; transporter=&amp;quot;cloudfiles&amp;quot;&amp;gt; &amp;lt;username&amp;gt;USERNAME&amp;lt;/username&amp;gt; &amp;lt;api_key&amp;gt;APIKEY&amp;lt;/api_key&amp;gt; &amp;lt;container&amp;gt;CONTAINER&amp;lt;/container&amp;gt; &amp;lt;/server&amp;gt; &amp;lt;/servers&amp;gt; &amp;lt;!-- Rules --&amp;gt; &amp;lt;rules&amp;gt; &amp;lt;rule for=&amp;quot;test&amp;quot; label=&amp;quot;Test&amp;quot;&amp;gt; &amp;lt;destinations&amp;gt; &amp;lt;destination server=&amp;quot;Rackspace Cloud Files&amp;quot; path=&amp;quot;test&amp;quot; /&amp;gt; &amp;lt;/destinations&amp;gt; &amp;lt;/rule&amp;gt; &amp;lt;/rules&amp;gt; &amp;lt;/config&amp;gt;  Add this to /etc/rc.</description>
    </item>
    
  </channel>
</rss>