<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redux on TLDR Dev Notes</title>
    <link>localhost/hugo-tldr/redux/</link>
    <description>Recent content in Redux on TLDR Dev Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>TOML &amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Wed, 11 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="localhost/hugo-tldr/redux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>General React-Redux Flow</title>
      <link>localhost/hugo-tldr/redux/general-react-redux-flow/</link>
      <pubDate>Wed, 11 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>localhost/hugo-tldr/redux/general-react-redux-flow/</guid>
      <description>General React-Redux Flow  Create actions and reducers Connect the app to store with Provider Create a container  mapStateToProps mapDispatchToProps connect  Using state and dispatch  connecting the store import { Provider } from &#39;react-redux ReactDOM.render( &amp;lt;Provider store={store}&amp;gt; &amp;lt;MyRootComponent /&amp;gt; &amp;lt;/Provider&amp;gt;, document.getElementById(&#39;root&#39;) )  Creating a container import React from &#39;react import { connect } from &#39;react-redux&#39; class MyClass extends React.Component {} function mapStateToProps (state, ownProps) {} function mapDispatchToProps (state, ownProps) {} export default connect(mapStateToProps, mapDispatchToProps)(MyClass)  You can pass down the whole state to the connect function, or you can map your props and actions and then connect them, it&amp;rsquo;s up to you really.</description>
    </item>
    
    <item>
      <title>Object.assign() vs Object spread operator</title>
      <link>localhost/hugo-tldr/redux/object/</link>
      <pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>localhost/hugo-tldr/redux/object/</guid>
      <description> Object.assign() vs Object spread operator You can use ...state, action instead of Object.assign({}, state, action)
Will need a separate Babel plugin to work.
npm i -D babel-plugin-syntax-object-rest-spread babel-plugin-transform-object-rest-spread  once installed, add the plugins to .babelrc
&amp;quot;plugins&amp;quot;: [ &amp;quot;syntax-object-rest-spread&amp;quot;, &amp;quot;transform-object-rest-spread&amp;quot; ]  Links  Redux Docs:   </description>
    </item>
    
    <item>
      <title>Middleware</title>
      <link>localhost/hugo-tldr/redux/redux-middleware/</link>
      <pubDate>Fri, 02 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>localhost/hugo-tldr/redux/redux-middleware/</guid>
      <description>Middleware middlewares intercept actions, modify them, or cancel them by not calling any of the next middleware.
Basically, middleware happens between dispatching an action, and the moment it reaches the reducer.
// Create a middleware // Logger const logger = store =&amp;gt; next =&amp;gt; action =&amp;gt; { console.log(&#39;action fired&#39;, action) next(action) } // Apply middleware const middleware = applyMiddleware(logger) // create the store, pass it the middleware along with reducers and state const store = createStore(reducer, 1, middleware)  You&amp;rsquo;re probably never gonna create middleware, you&amp;rsquo;ll just npm install them.</description>
    </item>
    
    <item>
      <title>Redux Intro</title>
      <link>localhost/hugo-tldr/redux/redux-intro/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>localhost/hugo-tldr/redux/redux-intro/</guid>
      <description>Redux  Single state tree Actions describe updates Reducers apply updates   Everything that happens in your app is an action. These can be caused by users, browser events, or server events. Doesn’t matter. Everything that changes something in your app does it via an “action”.
 You have one giant state object that represents all the state in your app. These are not special Models, or Collections, it’s just friggin’ objects, arrays, and primitives.</description>
    </item>
    
    <item>
      <title>Troubleshooting Redux</title>
      <link>localhost/hugo-tldr/redux/troubleshooting/</link>
      <pubDate>Mon, 11 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>localhost/hugo-tldr/redux/troubleshooting/</guid>
      <description> Troubleshooting Redux State is not updating  Make sure you are not mutating your state in any of the reducers  Actions not dispatching  Make sure you&amp;rsquo;re adding this.props before the action you want to dispatch.  State is not showing  This happens when you  </description>
    </item>
    
  </channel>
</rss>